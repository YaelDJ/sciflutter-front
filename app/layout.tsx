import dynamic from 'next/dynamic'

import { Montserrat } from 'next/font/google'

import type { Metadata } from 'next'
import type { FC } from 'react'
import type { LoggedUser } from './_interfaces/api'

import Header from './_components/header'
import Footer from './_components/footer'
import NavBarPublic from './_components/navBarPublic'
import BackButton from "./_components/backButton";
import { ToogleMenu } from './_components/toogleMenu'

import NavBarSkeleton from './_skeletons/navBarSkeleton'

import { getLoggedUser } from './_actions/userActions'

import { SideMenuProvider } from './_context/sideMenuContext'
import { AlertProvider } from './_context/alertContext'
import { SocketProvider } from './_context/socketContext'

import '@/styles/globals.scss'
import '@/styles/pages/main.scss'

const montserrat = Montserrat({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: {
    template: 'Sciflutter | %s',
    default: 'Sciflutter'
  },
  description: 'Generated by create next app'
}

const DynamicNavBar = dynamic(() => import('./_components/navBarUser'), { loading: () => <NavBarSkeleton /> })
const DynamicAlert = dynamic(() => import('./_components/alert'), { ssr: false })

interface Props {
  children: React.ReactNode
}

const RootLayout: FC<Props> = async ({ children }) => {
  const loggedUser: LoggedUser | null = await getLoggedUser()

  return (
    <html lang="en">
      <body className={`${montserrat.className} light`}>
        <AlertProvider>
          <SideMenuProvider>
            <SocketProvider>
              <Header>
                {!loggedUser ? (
                  <NavBarPublic />
                ) : (
                  <DynamicNavBar user={loggedUser} />
                )}
              </Header>

              <BackButton/>
              <main className="l-container_main">
                {children}
              </main>
            </SocketProvider>

            <Footer />

            {loggedUser && <ToogleMenu user={loggedUser} />}

            <DynamicAlert />
          </SideMenuProvider>
        </AlertProvider>
      </body>
    </html>
  );
}

export default RootLayout